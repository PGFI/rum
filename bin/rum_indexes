#!/usr/bin/env perl 
# -*- cperl -*-

package RUM::Script::Indexes;

=head1 NAME

rum-indexes - List, install, or remove RUM indexes

=head1 SYNOPSIS

  # Get a list of available indexes
  rum-indexes -l

  # Install an index by build name
  rum-indexes -i hg19

  # Install an index by number
  rum-indexes -i 1

  # Remove an index by build name or number
  rum-indexes -r hg19
  rum-indexes -r 1
  
=cut

use strict;
use warnings;

use FindBin qw($Bin);
use lib "$Bin/../lib";
use RUM::Repository;
use RUM::Script qw(get_options);
use POSIX;

sub new {
    my ($class) = @_;
    return bless {}, $class;
}

sub main {
    my ($self) = @_;

    get_options(
        "--list|l"    => \(my $do_list),
        "--install|i" => \(my $do_install),
        "--remove|r"  => \(my $do_remove));
    
    $self->{repo} = RUM::Repository->new;
    
    if ($do_list) {
        $self->list_indexes(@ARGV);
    }
    elsif ($do_install) {
        $self->install_index(@ARGV);
    }
    elsif ($do_remove) {
        $self->remove_index(@ARGV);
    }
}

sub repo { shift->{repo} }

sub list_indexes {
    my ($self, $pattern) = @_;
    my $repo = $self->repo;
    
    $repo->fetch_organisms_file unless -e $repo->organisms_file;

    print "The following indexes are available:\n\n";
    my %query;
    $query{pattern} = qr /$pattern/ if $pattern;
    $self->print_indexes($repo->indexes(%query));
}

sub print_indexes {
    my ($self, @indexes) = @_;

    my $i = 1;
    for my $idx (@indexes) {
        printf "  %2d %8s: %20s (%s)\n", 
            $idx->order, $idx->build, $idx->common, $idx->latin;
    }
}

sub select_index {
    my ($self, $spec) = @_;
    print "Spec is $spec\n";
    my $repo = $self->repo;
    my @orgs = $repo->indexes;
    if (isdigit($spec)) {
        my @indexes = $repo->indexes;
        return $indexes[$spec - 1] if $spec > 0 && $spec <= @indexes;
    }
    
    my @candidates = $repo->indexes(pattern => $spec);
    return $candidates[0] if @candidates == 1;
    
    if (@candidates > 1) {
        print "I matched more than one match an index for $spec\n";
        $self->print_indexes(@candidates);
        exit(1);
    }

    if (@candidates == 0) {
        print <<EOF;

I don't have an index with a build name, common name, or latin name of
$spec. Please try $0 --list to see available indexes.
EOF
        exit(1);
    }
    
}

sub install_index {
    my ($self, $spec) = @_;
    my $org = $self->select_index($spec);
    print "Installing $org->{build}: $org->{common} ($org->{latin})\n";
    my $callback = sub {
        my ($event, $url) = @_;
        print "$url\n" if $event eq 'start';
    };
    $self->repo->install_index($org, $callback);
}

sub remove_index {
    my ($self, $spec) = @_;
    my $org = $self->select_index($spec);
    print "Removing $org->{build}: $org->{common} ($org->{latin})\n";
    my $callback = sub {
        my ($event, $file) = @_;
        print "Removing $file\n" if $event eq 'start';
    };
    $self->repo->remove_index($org, $callback);
}

__PACKAGE__->new->main;
