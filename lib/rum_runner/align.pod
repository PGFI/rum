=head1 NAME

rum_runner align - Run the RUM pipeline.

=head1 SYNOPSIS

  # Start a job
  rum_runner align           
      --index-dir INDEX_DIR  
      --name      JOB_NAME   
      --output    OUTPUT_DIR 
    [ --chunks    NUM_CHUNKS ]
    [ OPTIONS ]
    FORWARD_READS [ REVERSE_READS ]

  # Restart a stopped job based on output directory
  rum_runner align --output OUTPUT_DIR

=head1 DESCRIPTION

Runs the RUM pipeline. 

The first time you run C<rum_runner align -o I<dir> OPTIONS> on output
directory I<dir>, rum_runner will save the options you ran it with in
I<dir/.rum/job_settings>. Then if you need to rerun the job for any
reason, you can run C<rum_runner align -o I<dir>> later and it will
automatically pick up the options you specified originally.

This program writes very large intermediate files.  If you have a
large genome such as mouse or human then it is recommended to run in
chunks on a cluster, or a machine with multiple processors.  Running
with under five million reads per chunk is usually best, and getting
it under a million reads per chunk will speed things considerably.

=head1 OPTIONS

=head2 Common Job Configuration Options

You will probably specify all of these options for any given job. Once
you start a job running, if you need to restart it, you should not
attempt to change the values of these settings. Doing so may result in
undefined behavior.

=over 4

=item B<FORWARD> (required)

=item B<REVERSE> (optional)

For unpaired data, the single file of reads.  For paired data the
files of forward and reverse reads. Files can be either fasta or
fastq; the type is inferred.

=item B<-i>, B<--index-dir> I<index_dir> (required)

The path to the directory that contains the RUM index for the organism
you want to align against.  Please use I<rum_indexes> to install
indexes.

=item B<-o>, B<--output-dir> I<output_dir> (required)

Where to write the temp, intermediate, and results files. Note that
rum_runner will read the job configuration file from this directory,
so if you need to run the job again, you do not need to run it with
the same options.

=item B<--chunks> I<num_chunks> (optional, default=1)

The number of pieces to break the job into (defaults to 1).  Use 1
chunk unless you are on a cluster, or have multiple cores with lots of
RAM.  Have at least one processing core per chunk.  A genome like
human will also need about 5 to 6 Gb of RAM per chunk.  Even with a
small genome, if you have tens of millions of reads, you will still
need a few Gb of RAM to get through the post-processing.

=item B<--name> I<name> (required)

A string to identify this run - use only alphanumeric, underscores,
and dashes.  No whitespace or other characters.  Must be less than 250
characters.

=item B<--platform> I<platform_name> (optional)

Specify the cluster platform that you are running on. If not supplied,
I will assume that you are not running on a cluster. You can still
specify more than one chunk. You may not want to use more chunks than
you have cores, because that can slow things down considerably. 

Allowable values for I<name> are:

=over 4

=item * Local

Not on a cluster; run all jobs locally simply by executing the
programs directly.

=item * SGE

Sun Grid Engine. Use qsub to submit jobs, qstat to check their status,
and qdel to kill them.

=back

You can also specify the platform using the following aliases:

=over 4

=item B<--qsub>

Alias for C<--platform SGE>.

=back

=back

=head2 Advanced Job Configuration Options

You can use these options to tweak some lower level settings. These
settings are also saved in a file in the output directory so you don't
need to provide them again if you restart a job. You should not change
them once you start a job running.

=over 4

=item B<--alt-genes> I<x>

x is a file with gene models to use for calling junctions novel.  If
not specified will use the gene models file specified in the config
file.

=item B<--alt-quant> I<x>

If specified x will be used to quantify features in addition to the
gene models file specified in the config file.  Both are reported to
separate files.

=item B<--blat-only>

Don't run bowtie, only blat and the parts of the pipeline that deal
with blat results.

=item B<--count-mismatches>

Report in the last column the number of mismatches, ignoring
insertions

=item B<--dna>

Run in dna mode, meaning don't map across splice junctions.

=item B<--genome-only>

Do RNA mapping, but without using a transcript database.  Note: there
will be no feature quantifications in this mode, because those are
based on the transcript database.

=item B<--junctions>

Use this *if* using the -dna flag and you still want junction
calls. If this is set you should have the gene models file specified
in the RUM config file (if you have one).  Without the -dna flag
junctions generated by default so you don't need to set this.

=item B<--limit-bowtie-nu>

Limits the number of ambiguous mappers in the Bowtie run to a max of
100.  If you have short reads and a large genome, or a very repetitive
genome, this might be necessary to keep the bowtie files from getting
out of hand - 10Gb per lane is not abnormal but 100Gb might be. (note:
45 bases is considered short for mouse, 70 bases considered long,
between it's hard to say).

=item B<--limit-nu> I<n>

Limits the number of ambiguous mappers in the final output by removing
all reads that map to n locations or more.

=item B<--max-insertions-per-read> I<n>

Allow at most n insertions in one read.  The default is n=1.  Setting
n>1 is only allowed for single end reads.  Don't raise it unless you
know what you are doing, because it can greatly increase the false
alignments.

=item B<--min-identity> I<x>

TODO: Describe me

=item B<--min-length> I<x>

Don't report alignments less than this long.  The default = 50 if the
readlength >= 80, else = 35 if readlength >= 45 else = 0.8 *
readlength.  Don't set this too low you will start to pick up a lot of
garbage.

=item B<--preserve-names>

Keep the original read names in the SAM output file.  Note: this
doesn't work when there are variable length reads.

=item B<--quals-file> I<filename>

Specify a qualities file separately from a reads file. TODO: Describe me more.

=item B<--quantify>

Use this *if* using the -dna flag and you still want quantified
features.  If this is set you *must* have the gene models file
specified in the RUM config file.  Without the -dna flag quantified
features are generated by default so you don't need to set this.

=item B<--ram> I<n>

On some systems RUM might not be able to determine the amount of RAM
you have.  In that case, with this option you can specify the number
of Gb of ram you want to dedicate to each chunk.  This is rarely
necessary and never necessary if you have at least 6 Gb per chunk.

=item B<--read-length> I<x>

Specify the length of the reads. By default I will determine it from the input.

=item B<--strand-specific>

If the data are strand specific, then you can use this option to
generate strand specific coverage plots and quantified values.

=item B<--variable-read-lengths>

Set this if your reads are not all of the same length.

=back

=head2 BLAT options

You can tweak the BLAT portion of RUM to suit your needs. We found the
following to be a good balance for speed, sensitivity, and temporary
file size. Like the other settings above, these values are saved in a
file in the output directory so you don't need to enter them twice,
and you should not change them once you start a job.

=over 4

=item B<--minIdentity> I<x> 

Run blat with minIdentity=x (default x=93).

=item B<--tileSize> I<x>

Run blat with tileSize=x (default x=12).

=item B<--stepSize> I<x>

Run blat with stepSize=x (default x=6).

=item B<--repMatch> I<x>

Run blat with repMatch=x (default x=256).

=item B<--maxIntron> I<x>

Run blat with maxIntron=x (default x=50000).

=back

=head2 Directives

These options are not saved as part of the configuration file, and
only affect how RUM behaves on one invocation. If you want to manually
split up job into chunks and run each chunk separately, you can use
the I<--preprocessing>, I<--processing>, I<--postprocessing>, and
I<--chunks> options to do that. Detailed instructions on doing that are
provided L<here|https://github.com/PGFI/rum/wiki/Running-a-job-on-a-cluster>.

=over 4

=item B<--chunk> I<chunk_num>

Just run the processing phase of the chunk with the specified number.

=item B<--no-clean>

Do not remove the intermediate and temp files after finishing.

=item B<--preprocessing>

=item B<--processing>

=item B<--postprocessing>

The RUM pipeline can be broken into three distinct phases:
preprocessing (splitting the input files into chunks), processing
(mapping the reads for each chunk, possibly distributed), and
postprocessing (merging the results together). By default rum_runner
will run any outstanding steps in all three phases, but you can tell
it to run just one of the phases by supplying the corresponding
option.

=item B<-q>, B<--quiet>

Print less output than usual.

=item B<-v>, B<--verbose>

Print more output than usual.

=back

=head1 LOGO

  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  RUM version: $version
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                   _   _   _   _   _   _
                 // \\// \\// \\// \\// \\// \\/
                //\\_//\\_//\\_//\\_//\\_//\\_//
          o_O__O_ o
         | ====== |       .-----------.
         `--------'       |||||||||||||
          || ~~ ||        |-----------|
          || ~~ ||        | .-------. |
          ||----||        ! | UPENN | !
         //      \\        \`-------'/
        // /!  !\ \\        \_  O  _/
       !!__________!!         \   /
       ||  ~~~~~~  ||          `-'
       || _        ||
       |||_|| ||\/|||
       ||| \|_||  |||
       ||          ||
       ||  ~~~~~~  ||
       ||__________||
  .----|||        |||------------------.
       ||\\      //||                 /|
       |============|                //
       `------------'               //
  ---------------------------------'/
  ---------------------------------'
    .------------------------------------.
    | RNA-Seq Unified Mapper (RUM) Usage |
    ` ================================== '

=cut

=head1 SEE ALSO

L<rum_runner>

=head1 AUTHORS

Gregory Grant (ggrant@grant.org)

Mike DeLaurentis (delaurentis@gmail.com)

=head1 COPYRIGHT

Copyright 2012, University of Pennsylvania

